{
  "service": {
    "service": "demo-proj",
    "serviceObject": {
      "name": "demo-proj"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "us-east-2",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CheckInventoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/demo-proj-dev-checkInventory"
            }
          },
          "CalculateTotalLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/demo-proj-dev-calculateTotal"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "demo-proj",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/demo-proj-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/demo-proj-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "demo-proj",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CheckInventoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/demo-proj/dev/1641558414587-2022-01-07T12:26:54.587Z/demo-proj.zip"
              },
              "Handler": "handler.checkInventory",
              "Runtime": "nodejs12.x",
              "FunctionName": "demo-proj-dev-checkInventory",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CheckInventoryLogGroup"
            ]
          },
          "CalculateTotalLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/demo-proj/dev/1641558414587-2022-01-07T12:26:54.587Z/demo-proj.zip"
              },
              "Handler": "handler.calculateTotal",
              "Runtime": "nodejs12.x",
              "FunctionName": "demo-proj-dev-calculateTotal",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CalculateTotalLogGroup"
            ]
          },
          "CheckInventoryLambdaVersiondrL6VNuN8jvXS1L8m9UcKkAPT4QeMsbqsUT2d49Bg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CheckInventoryLambdaFunction"
              },
              "CodeSha256": "FQtBJmSEXVX2IYGTlUgE9sam5dpIiFup3qCtrg7eNrQ="
            }
          },
          "CalculateTotalLambdaVersionWC1U6DaqRfVfYz4kJwHeJH1eM9nr1YnkG73kTTv04c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CalculateTotalLambdaFunction"
              },
              "CodeSha256": "FQtBJmSEXVX2IYGTlUgE9sam5dpIiFup3qCtrg7eNrQ="
            }
          },
          "StoreCheckoutFlowRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": {
                        "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                      }
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-demo-proj-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "CheckInventoryLambdaFunction",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": {
                                  "Fn::GetAtt": [
                                    "CheckInventoryLambdaFunction",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CalculateTotalLambdaFunction",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": {
                                  "Fn::GetAtt": [
                                    "CalculateTotalLambdaFunction",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "StoreCheckoutFlow": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": {
                "Fn::Sub": [
                  "{\n  \"StartAt\": \"checkInventory\",\n  \"States\": {\n    \"checkInventory\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${550a531c2a7d26c16fafd4c2979249a9}\",\n      \"Next\": \"calculateTotal\"\n    },\n    \"calculateTotal\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${6c2e8c7a1ed3b168f6dcd4d3fcfc4329}\",\n      \"End\": true\n    }\n  }\n}",
                  {
                    "550a531c2a7d26c16fafd4c2979249a9": {
                      "Fn::GetAtt": [
                        "CheckInventoryLambdaFunction",
                        "Arn"
                      ]
                    },
                    "6c2e8c7a1ed3b168f6dcd4d3fcfc4329": {
                      "Fn::GetAtt": [
                        "CalculateTotalLambdaFunction",
                        "Arn"
                      ]
                    }
                  }
                ]
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "StoreCheckoutFlowRole",
                  "Arn"
                ]
              },
              "StateMachineName": "storeCheckoutFlow"
            },
            "DependsOn": [
              "StoreCheckoutFlowRole"
            ]
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-demo-proj-dev-ServerlessDeploymentBucketName"
            }
          },
          "CheckInventoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CheckInventoryLambdaVersiondrL6VNuN8jvXS1L8m9UcKkAPT4QeMsbqsUT2d49Bg"
            },
            "Export": {
              "Name": "sls-demo-proj-dev-CheckInventoryLambdaFunctionQualifiedArn"
            }
          },
          "CalculateTotalLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CalculateTotalLambdaVersionWC1U6DaqRfVfYz4kJwHeJH1eM9nr1YnkG73kTTv04c"
            },
            "Export": {
              "Name": "sls-demo-proj-dev-CalculateTotalLambdaFunctionQualifiedArn"
            }
          },
          "StoreCheckoutFlowArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "StoreCheckoutFlow"
            },
            "Export": {
              "Name": "sls-demo-proj-dev-StoreCheckoutFlowArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-step-functions"
    ],
    "pluginsData": {},
    "functions": {
      "checkInventory": {
        "handler": "handler.checkInventory",
        "events": [],
        "name": "demo-proj-dev-checkInventory",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CheckInventoryLambdaVersiondrL6VNuN8jvXS1L8m9UcKkAPT4QeMsbqsUT2d49Bg"
      },
      "calculateTotal": {
        "handler": "handler.calculateTotal",
        "events": [],
        "name": "demo-proj-dev-calculateTotal",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CalculateTotalLambdaVersionWC1U6DaqRfVfYz4kJwHeJH1eM9nr1YnkG73kTTv04c"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "stepFunctions": {
        "stateMachines": {
          "storeCheckoutFlow": {
            "name": "storeCheckoutFlow",
            "definition": {
              "StartAt": "checkInventory",
              "States": {
                "checkInventory": {
                  "Type": "Task",
                  "Resource": "${550a531c2a7d26c16fafd4c2979249a9}",
                  "Next": "calculateTotal"
                },
                "calculateTotal": {
                  "Type": "Task",
                  "Resource": "${6c2e8c7a1ed3b168f6dcd4d3fcfc4329}",
                  "End": true
                }
              }
            }
          }
        }
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "stepFunctions": {
      "stateMachines": {
        "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"stepFunctions\"][\"stateMachines\"]"
      },
      "activities": []
    },
    "artifact": "C:\\Users\\sweerasinghe\\Documents\\GitHub\\demo-proj\\.serverless\\demo-proj.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/demo-proj/dev/1641558414587-2022-01-07T12:26:54.587Z",
    "artifact": "demo-proj.zip"
  }
}